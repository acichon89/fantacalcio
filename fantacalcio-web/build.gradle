buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.2.4'
    }
}

description = 'Main user interface - web application'

apply plugin: 'war'
apply plugin: 'com.bmuschko.tomcat'

sourceSets {
	acceptanceTest {
    	java {
    		srcDir file('src/test-acceptance/java');
    	}
    	resources.srcDir file('src/test-acceptance/resources')
        compileClasspath = compileClasspath + configurations.provided
    }
}

dependencies {
	compile project (':fantacalcio-football')
	compile project (':fantacalcio-user')
	compile project (':fantacalcio-mail')
	compile 'org.springframework:spring-webmvc:4.1.7.RELEASE'
	compile 'org.springframework.social:spring-social-core:1.1.0.RELEASE'
	compile 'org.springframework.social:spring-social-config:1.1.0.RELEASE'
	compile 'org.springframework.social:spring-social-facebook:2.0.3.RELEASE'
	compile 'org.springframework.social:spring-social-security:1.1.0.RELEASE'
	providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
	
	def tomcatVersion = '7.0.59'
	tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
	       "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
	       "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
	       
	acceptanceTestCompile sourceSets.main.output		
	acceptanceTestCompile configurations.testCompile
	acceptanceTestCompile configurations.testRuntime
	acceptanceTestCompile configurations.integrationTestCompile
	acceptanceTestCompile configurations.integrationTestRuntime
	
	acceptanceTestCompile 	'org.seleniumhq.selenium:selenium-java:2.52.0',
    'org.seleniumhq.selenium:selenium-api:2.52.0',
    'org.seleniumhq.selenium:selenium-server:2.52.0',
    'org.seleniumhq.selenium:selenium-support:2.52.0',
    'org.seleniumhq.selenium:selenium-firefox-driver:2.52.0'
}

ext {
    tomcatStopPort = 8081
    tomcatStopKey = 'stopKey'
}


task integrationTomcatRun(type: com.bmuschko.gradle.tomcat.tasks.TomcatRun) {
    stopPort = tomcatStopPort
    stopKey = tomcatStopKey
    daemon = true
}

task integrationTomcatStop(type: com.bmuschko.gradle.tomcat.tasks.TomcatStop) {
    stopPort = tomcatStopPort
    stopKey = tomcatStopKey
}

task acceptanceTest(type: Test) {
	systemProperty "spring.profiles.active", System.getProperty("spring.profiles.active")
	dependsOn integrationTomcatRun
    finalizedBy integrationTomcatStop
	testClassesDir = sourceSets.acceptanceTest.output.classesDir
	classpath = sourceSets.acceptanceTest.runtimeClasspath
	outputs.upToDateWhen { false }
	reports.junitXml.destination = file("$buildDir/acceptance-test-results/")
	reports.html.destination = file("$buildDir/reports/acceptance-tests/")
}


task jacocoAcceptanceTestReport(type:JacocoReport){
	  group = "Reporting"
      description = "Generate Jacoco coverage reports after running acceptance tests."

      executionData = fileTree(dir: 'build/jacoco', include: 'acceptanceTest.exec')

      reports {
             xml{
                 enabled false
             }
             csv.enabled false
             html{
                 enabled true
                 //Following value is a folder
                 destination "${buildDir}/reports/jacoco/acceptance-test/html"
             }
      }


      sourceDirectories = files(sourceSets.main.allSource.srcDirs)
      classDirectories = files(sourceSets.main.output.classesDir)
}

/// IDE :
	eclipse {
	  classpath {
	    plusConfigurations += [ configurations.acceptanceTestCompile]
	  }
	}

	check.dependsOn acceptanceTest
	acceptanceTest.dependsOn integrationTest
	integrationTest.dependsOn test

tomcat {
    httpPort = 8070
    httpsPort = 8071
    enableSSL = true
    contextPath = 'fantacalcio'
}